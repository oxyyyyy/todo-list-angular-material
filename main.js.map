{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/item.service.ts","webpack:///./src/app/items/items.component.css","webpack:///./src/app/items/items.component.html","webpack:///./src/app/items/items.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-items></app-items>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ItemsComponent } from './items/items.component';\r\n\r\nimport { ItemService } from './item.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ItemsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFirestoreModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  providers: [ItemService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Observable } from 'rxjs';\r\nimport { Item } from './item';\r\n\r\n\r\n@Injectable()\r\nexport class ItemService {\r\n\r\n  itemsCollection: AngularFirestoreCollection<Item>;\r\n  items: Observable<any[]>;\r\n\r\n  constructor(public afs: AngularFirestore) {\r\n    this.items = this.afs.collection('items').valueChanges();\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  addItem(inputData) {\r\n    const generatedId = this.afs.createId();\r\n    this.afs.collection('items').doc(generatedId).set({ id: generatedId, title: inputData.title, isChecked: false });\r\n  }\r\n\r\n  checkItem(item) {\r\n    this.afs.collection('items').doc(item.id).update({\r\n      isChecked: !item.isChecked\r\n    });\r\n  }\r\n\r\n  // orderItems() {\r\n  //   this.afs.collection('items', ref => ref.orderBy('isChecked'));\r\n  // }\r\n\r\n}\r\n","module.exports = \".loading-container {\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: space-between;\\r\\n\\talign-items: center;\\r\\n}\\r\\nh2 {\\r\\n\\tfont-weight: 500;\\r\\n}\\r\\nh1 {\\r\\n\\tfont-family: 'Lato', sans-serif;\\r\\n\\tfont-size: 50px;\\r\\n\\tfont-weight: 300;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 24px;\\r\\n}\\r\\n.header {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\tmargin-bottom: 30px;\\r\\n}\\r\\nul {\\r\\n\\tlist-style: none;\\r\\n}\\r\\n.container {\\r\\n\\tpadding: 25px 20%;\\r\\n}\\r\\nmat-card-content {\\r\\n\\tpadding-top: 15px;\\r\\n}\\r\\n.isChecked {\\r\\n\\ttext-decoration: line-through;\\r\\n}\\r\\n.add-form {\\r\\n\\tmargin-top: 15px;\\r\\n}\\r\\n/* Media */\\r\\n@media (max-width: 767px) {\\r\\n\\t.container {\\r\\n\\t\\tpadding: 5%;\\r\\n\\t}\\r\\n\\th1 {\\r\\n\\t\\tfont-size: 40px;\\r\\n\\t}\\r\\n}\\r\\n@media (min-width: 1200px) {\\r\\n\\t.container {\\r\\n\\t\\tpadding: 50px 30%;\\r\\n\\t}\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n  <mat-card class=\\\"animated fadeIn\\\" *ngIf=\\\"showCard == false\\\">\\r\\n    <div class=\\\"loading-container\\\">\\r\\n      <h2>Loading...</h2>\\r\\n      <mat-spinner diameter=30 color=\\\"accent\\\"></mat-spinner>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card class=\\\"animated fadeInUp\\\" *ngIf=\\\"showCard\\\">\\r\\n\\r\\n    <h1>Your's to-do list</h1>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <mat-card-header class=\\\"header\\\">\\r\\n      <mat-form-field class=\\\"add-form\\\">\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Type todo here...\\\" [(ngModel)]=\\\"inputData.title\\\" (input)=\\\"toggleBtn()\\\" required>\\r\\n      </mat-form-field>\\r\\n      <button type=\\\"submit\\\" class=\\\"add-btn\\\" mat-raised-button color=\\\"accent\\\" [disabled]=isDisabledBtn (click)=\\\"addItem()\\\">Add</button>\\r\\n      <!-- <button class=\\\"add-btn\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"orderItems()\\\">Order</button> -->\\r\\n    </mat-card-header>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <mat-card-content>\\r\\n      <mat-list>\\r\\n        <mat-list-item *ngFor='let item of items'>\\r\\n          <mat-checkbox [(ngModel)]=\\\"item.isChecked\\\" (click)=\\\"checkItem(item)\\\" [ngClass]=\\\"{isChecked: item.isChecked}\\\">{{ item.title }}</mat-checkbox>\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-card-content>\\r\\n\\r\\n  </mat-card>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ItemService } from '../item.service';\r\nimport { Item } from '../item';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  styleUrls: ['./items.component.css']\r\n})\r\n\r\nexport class ItemsComponent implements OnInit {\r\n\r\n  items: Item[];\r\n  inputData: Item = {\r\n    id: 0,\r\n    title: '',\r\n    isChecked: false\r\n  };\r\n  isDisabledBtn = true;\r\n  showCard = false;\r\n\r\n  constructor(private itemService: ItemService) { }\r\n\r\n  ngOnInit() {\r\n    this.itemService.getItems().subscribe(items => {\r\n      this.items = items;\r\n      this.showCard = true;\r\n    });\r\n  }\r\n\r\n  toggleBtn() {\r\n    if (this.inputData.title === '') {\r\n      this.isDisabledBtn = true;\r\n    } else {\r\n      this.isDisabledBtn = false;\r\n    }\r\n  }\r\n\r\n  addItem() {\r\n    this.itemService.addItem(this.inputData);\r\n    this.inputData.title = '';\r\n    this.isDisabledBtn = true;\r\n  }\r\n\r\n  checkItem(item) {\r\n    this.itemService.checkItem(item);\r\n  }\r\n\r\n  // orderItems() {\r\n  //   this.itemService.orderItems();\r\n  // }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyAJuZLuk-6dwnKykCuwSxdZZCxZkvLz3M0',\r\n    authDomain: 'todo-list-firebase-ca954.firebaseapp.com',\r\n    databaseURL: 'https://todo-list-firebase-ca954.firebaseio.com',\r\n    projectId: 'todo-list-firebase-ca954',\r\n    storageBucket: '',\r\n    messagingSenderId: '950939193397'\r\n  }\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}